{"ast":null,"code":"var _jsxFileName = \"/Users/alancln/Desktop/dina-dopt/frontend/src/components/session/login_form.js\";\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  } // Once the user has been authenticated, redirect to the Tweets page\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/tweets');\n    } // Set or clear errors\n\n\n    this.setState({\n      errors: nextProps.errors\n    });\n  } // Handle field updates (called in the render method)\n\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  } // Handle form submission\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.login(user);\n  } // Render the session errors if there are any\n\n\n  renderErrors() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(this.state.errors).map((error, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: this.state.errors[error]\n      }, `error-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.email,\n            onChange: this.update('email'),\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.password,\n            onChange: this.update('password'),\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), this.renderErrors()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const LoginForm = props => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errors, setErrors] = useState({});\n//   useEffect( () => {\n//     if(props.currentUser === true) {\n//       props.history.push('/tweets');\n//     }\n//     setErrors(props.errors);\n//   }, props.currentUser);\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     let user = {\n//       email: email,\n//       password: password\n//     }\n//     props.login(user);\n//   }\n//   const renderErrors = () => {\n//     return (\n//       <ul>\n//       {Object.keys(errors).map((error, i) => (\n//         <li key={`error-${i}`}>\n//           {errors[error]}\n//         </li>\n//       ))}\n//     </ul>\n//     )\n//   }\n//   return (\n//       <div>\n//         <form onSubmit={handleSubmit}>\n//           <div>\n//               <input type=\"text\"\n//                 value={email}\n//                 onChange={ e => setEmail(e.target.value) }\n//                 placeholder=\"Email\"\n//               />\n//             <br/>\n//               <input type=\"password\"\n//                 value={password}\n//                 onChange={e => setPassword(e.target.value)}\n//                 placeholder=\"Password\"\n//               />\n//             <br/>\n//             <input type=\"submit\" value=\"Submit\" />\n//             {renderErrors()}\n//           </div>\n//         </form>\n//       </div>\n//   )\n// }\n\n\nexport default _c = withRouter(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","withRouter","LoginForm","Component","constructor","props","state","email","password","errors","handleSubmit","bind","renderErrors","componentWillReceiveProps","nextProps","currentUser","history","push","setState","update","field","e","currentTarget","value","preventDefault","user","login","Object","keys","map","error","i","render"],"sources":["/Users/alancln/Desktop/dina-dopt/frontend/src/components/session/login_form.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  // Once the user has been authenticated, redirect to the Tweets page\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/tweets');\n    }\n\n    // Set or clear errors\n    this.setState({errors: nextProps.errors})\n  }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  // Handle form submission\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(user); \n  }\n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const LoginForm = props => {\n\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errors, setErrors] = useState({});\n\n//   useEffect( () => {\n//     if(props.currentUser === true) {\n//       props.history.push('/tweets');\n//     }\n//     setErrors(props.errors);\n//   }, props.currentUser);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     let user = {\n//       email: email,\n//       password: password\n//     }\n//     props.login(user);\n//   }\n\n//   const renderErrors = () => {\n//     return (\n//       <ul>\n//       {Object.keys(errors).map((error, i) => (\n//         <li key={`error-${i}`}>\n//           {errors[error]}\n//         </li>\n//       ))}\n//     </ul>\n//     )\n//   }\n\n//   return (\n//       <div>\n//         <form onSubmit={handleSubmit}>\n//           <div>\n//               <input type=\"text\"\n//                 value={email}\n//                 onChange={ e => setEmail(e.target.value) }\n//                 placeholder=\"Email\"\n//               />\n//             <br/>\n//               <input type=\"password\"\n//                 value={password}\n//                 onChange={e => setPassword(e.target.value)}\n//                 placeholder=\"Password\"\n//               />\n//             <br/>\n//             <input type=\"submit\" value=\"Submit\" />\n//             {renderErrors()}\n//           </div>\n//         </form>\n//       </div>\n//   )\n// }\n\nexport default withRouter(LoginForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
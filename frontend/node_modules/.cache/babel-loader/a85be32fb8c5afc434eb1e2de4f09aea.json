{"ast":null,"code":"import * as PetUtil from \"../util/pet_util\";\nexport const RECEIVE_ALL_PETS = \"RECEIVE_ALL_PETS\";\nexport const RECEIVE_PET = \"RECEIVE_PET\";\nexport const REMOVE_PET = \"REMOVE_PET\";\nexport const RECEIVE_PET_ERRORS = \"RECEIVE_PET_ERRORS\";\nexport const receiveAllPets = pets => {\n  return {\n    type: RECEIVE_ALL_PETS,\n    pets\n  };\n};\nexport const receiveSinglePet = pet => {\n  return {\n    type: RECEIVE_PET,\n    pet\n  };\n};\nexport const removePet = () => {\n  return {\n    type: REMOVE_PET\n  };\n};\nexport const receivePetErrors = errors => {\n  return {\n    type: RECEIVE_PET_ERRORS,\n    errors\n  };\n}; // index show page\n\nexport const requestAllPets = () => dispatch => {\n  return PetUtil.getPets().then(pets => dispatch(receiveAllPets(pets)), errors => dispatch(receivePetErrors(errors)));\n}; // pet show page\n\nexport const requestSinglePet = petId => dispatch => {\n  return PetUtil.getPet(petId).then(pet => dispatch(receiveSinglePet(pet)), errors => dispatch(receivePetErrors(errors)));\n}; // *********** Internal Use Only *********** //\n\nexport const createPet = pet => dispatch => {\n  return PetUtil.addPet(pet).then(pet => dispatch(receiveSinglePet(pet)), errors => dispatch(receivePetErrors(errors)));\n};\nexport const editPet = pet => dispatch => {\n  return PetUtil.updatePet(pet).then(pet => dispatch(receiveSinglePet(pet)), errors => dispatch(receivePetErrors(errors)));\n};\nexport const deletePet = petId => dispatch => {\n  return PetUtil.removePet(petId).then(() => dispatch(removePet()), errors => dispatch(receivePetErrors(errors)));\n};","map":{"version":3,"names":["PetUtil","RECEIVE_ALL_PETS","RECEIVE_PET","REMOVE_PET","RECEIVE_PET_ERRORS","receiveAllPets","pets","type","receiveSinglePet","pet","removePet","receivePetErrors","errors","requestAllPets","dispatch","getPets","then","requestSinglePet","petId","getPet","createPet","addPet","editPet","updatePet","deletePet"],"sources":["/Users/alancln/Desktop/dina-dopt/frontend/src/actions/pet_actions.js"],"sourcesContent":["import * as PetUtil from \"../util/pet_util\";\n\nexport const RECEIVE_ALL_PETS = \"RECEIVE_ALL_PETS\";\nexport const RECEIVE_PET = \"RECEIVE_PET\";\nexport const REMOVE_PET = \"REMOVE_PET\";\nexport const RECEIVE_PET_ERRORS = \"RECEIVE_PET_ERRORS\";\n\nexport const receiveAllPets = pets => {\n    return {\n        type: RECEIVE_ALL_PETS,\n        pets\n    }\n}\n\nexport const receiveSinglePet = pet => {\n    return {\n        type: RECEIVE_PET,\n        pet \n    }\n}\n\nexport const removePet = () => {\n    return {\n        type: REMOVE_PET\n    }\n}\n\nexport const receivePetErrors = errors => {\n    return {\n        type: RECEIVE_PET_ERRORS,\n        errors\n    }\n}\n\n// index show page\nexport const requestAllPets = () => dispatch => {\n    return PetUtil.getPets()\n        .then( pets =>  dispatch(receiveAllPets(pets)),\n        errors => dispatch(receivePetErrors(errors)))\n}\n\n// pet show page\nexport const requestSinglePet = petId => dispatch => {\n    return PetUtil.getPet(petId)\n        .then( pet => dispatch(receiveSinglePet(pet)),\n        errors => dispatch(receivePetErrors(errors)))\n}\n\n// *********** Internal Use Only *********** //\n\nexport const createPet = pet => dispatch => {\n    return PetUtil.addPet(pet)\n        .then( pet => dispatch(receiveSinglePet(pet)),\n        errors => dispatch(receivePetErrors(errors)))\n}\n\nexport const editPet = pet => dispatch => {\n    return PetUtil.updatePet(pet)\n        .then (pet => dispatch(receiveSinglePet(pet)), \n        errors => dispatch(receivePetErrors(errors)))\n}\n\nexport const deletePet = petId => dispatch => {\n    return PetUtil.removePet(petId)\n        .then( () => dispatch(removePet()),\n        errors => dispatch(receivePetErrors(errors)))\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAClC,OAAO;IACHC,IAAI,EAAEN,gBADH;IAEHK;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAGC,GAAG,IAAI;EACnC,OAAO;IACHF,IAAI,EAAEL,WADH;IAEHO;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC3B,OAAO;IACHH,IAAI,EAAEJ;EADH,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,gBAAgB,GAAGC,MAAM,IAAI;EACtC,OAAO;IACHL,IAAI,EAAEH,kBADH;IAEHQ;EAFG,CAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;EAC5C,OAAOd,OAAO,CAACe,OAAR,GACFC,IADE,CACIV,IAAI,IAAKQ,QAAQ,CAACT,cAAc,CAACC,IAAD,CAAf,CADrB,EAEHM,MAAM,IAAIE,QAAQ,CAACH,gBAAgB,CAACC,MAAD,CAAjB,CAFf,CAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMK,gBAAgB,GAAGC,KAAK,IAAIJ,QAAQ,IAAI;EACjD,OAAOd,OAAO,CAACmB,MAAR,CAAeD,KAAf,EACFF,IADE,CACIP,GAAG,IAAIK,QAAQ,CAACN,gBAAgB,CAACC,GAAD,CAAjB,CADnB,EAEHG,MAAM,IAAIE,QAAQ,CAACH,gBAAgB,CAACC,MAAD,CAAjB,CAFf,CAAP;AAGH,CAJM,C,CAMP;;AAEA,OAAO,MAAMQ,SAAS,GAAGX,GAAG,IAAIK,QAAQ,IAAI;EACxC,OAAOd,OAAO,CAACqB,MAAR,CAAeZ,GAAf,EACFO,IADE,CACIP,GAAG,IAAIK,QAAQ,CAACN,gBAAgB,CAACC,GAAD,CAAjB,CADnB,EAEHG,MAAM,IAAIE,QAAQ,CAACH,gBAAgB,CAACC,MAAD,CAAjB,CAFf,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,OAAO,GAAGb,GAAG,IAAIK,QAAQ,IAAI;EACtC,OAAOd,OAAO,CAACuB,SAAR,CAAkBd,GAAlB,EACFO,IADE,CACIP,GAAG,IAAIK,QAAQ,CAACN,gBAAgB,CAACC,GAAD,CAAjB,CADnB,EAEHG,MAAM,IAAIE,QAAQ,CAACH,gBAAgB,CAACC,MAAD,CAAjB,CAFf,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,SAAS,GAAGN,KAAK,IAAIJ,QAAQ,IAAI;EAC1C,OAAOd,OAAO,CAACU,SAAR,CAAkBQ,KAAlB,EACFF,IADE,CACI,MAAMF,QAAQ,CAACJ,SAAS,EAAV,CADlB,EAEHE,MAAM,IAAIE,QAAQ,CAACH,gBAAgB,CAACC,MAAD,CAAjB,CAFf,CAAP;AAGH,CAJM"},"metadata":{},"sourceType":"module"}
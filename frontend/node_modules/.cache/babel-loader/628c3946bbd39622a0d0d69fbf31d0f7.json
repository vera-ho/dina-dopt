{"ast":null,"code":"import { RECEIVE_SESSION_ERRORS, RECEIVE_CURRENT_USER } from '../actions/session_actions';\nconst _nullErrors = [];\n\nconst SessionErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _nullErrors;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  Object.freeze(state);\n\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return Object.assign({}, action.errors);\n    // return action.errors;\n\n    case RECEIVE_CURRENT_USER:\n      return _nullErrors;\n\n    default:\n      return state;\n  }\n};\n\n_c = SessionErrorsReducer;\nexport default SessionErrorsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionErrorsReducer\");","map":{"version":3,"names":["RECEIVE_SESSION_ERRORS","RECEIVE_CURRENT_USER","_nullErrors","SessionErrorsReducer","state","action","Object","freeze","type","assign","errors"],"sources":["/Users/alancln/Desktop/dina-dopt/frontend/src/reducers/session_errors_reducer.js"],"sourcesContent":["import { RECEIVE_SESSION_ERRORS, RECEIVE_CURRENT_USER } from '../actions/session_actions';\n  \nconst _nullErrors = [];\n\nconst SessionErrorsReducer = (state = _nullErrors, action) => {\n    Object.freeze(state);\n\n    switch(action.type) {\n      case RECEIVE_SESSION_ERRORS:\n        return Object.assign({}, action.errors);\n        // return action.errors;\n      case RECEIVE_CURRENT_USER:\n        return _nullErrors;\n      default:\n        return state;\n    }\n  };\n  \n  export default SessionErrorsReducer;"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,oBAAjC,QAA6D,4BAA7D;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,MAAMC,oBAAoB,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBF,WAAwB;EAAA,IAAXG,MAAW;EAC1DC,MAAM,CAACC,MAAP,CAAcH,KAAd;;EAEA,QAAOC,MAAM,CAACG,IAAd;IACE,KAAKR,sBAAL;MACE,OAAOM,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBJ,MAAM,CAACK,MAAzB,CAAP;IACA;;IACF,KAAKT,oBAAL;MACE,OAAOC,WAAP;;IACF;MACE,OAAOE,KAAP;EAPJ;AASD,CAZH;;KAAMD,oB;AAcJ,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}